##----------------
#  G E N E R A L
##----------------

# First, consider to use your 'Caps Lock' key as Ctrl.

unbind C-b         # free up default prefix binding
set -g prefix C-a  # C-a as prefix
bind a send-prefix # allow C-a C-a in tmux

set -sg escape-time 0    # minimal keystroke delay
set -g  repeat-time 500  # milliseconds

# reload this config
unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded!"


##-------------
#  W I N D O W
##-------------
set -g base-index 1   # window index starts from 1

# Toggle last active window
bind-key C-w last-window

# Split windows
unbind -
bind - split-window -v    # up-down panes
unbind '\'
bind '\' split-window -h  # left-right panes

# Cycle through windows (repeatable)
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind -r Space select-window -t :+
bind -r C-Space select-window -t :+


##----------
#  P A N E
##----------
set -g pane-base-index 1  # pane index starts from 1

# Switch between panes, vim-style (repeatable)
unbind j
bind -r j select-pane -D
unbind k
bind -r k select-pane -U
unbind h
bind -r h select-pane -L
unbind l
bind -r l select-pane -R

# Cycle through panes (repeatable)
unbind o
bind -r o select-pane -t :.+

# Smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Resize panes (repeatable)
unbind J
bind -r J resize-pane -D 5
unbind K
bind -r K resize-pane -U 5
unbind H
bind -r H resize-pane -L 5
unbind L
bind -r L resize-pane -R 5


##----------------------
#  C O P Y / P A S T E
##----------------------
setw -g mode-keys vi   # Use vi-style to navigate in copy-mode

# Esc to enter copy-mode, then start copy-paste with vi keys: v,y,p
#unbind [
#bind Space copy-mode
#bind C-Space copy-mode
unbind p
bind p paste-buffer

# brew install reattach-to-user-namespace
#set-option -g default-command "safe-reattach-to-user-namespace -l $SHELL"
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
#bind -t vi-copy 'y' copy-pipe "safe-reattach-to-user-namespace pbcopy"
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "safe-reattach-to-user-namespace pbcopy"
#bind-key C-c run-shell "tmux save-buffer - | safe-reattach-to-user-namespace pbcopy" \; display-message "Last saved buffer copied to clipboard!"

##------------
#  M O U S E
##------------
# Scroll your way into copy mode (scrollback buffer)
# and select text for copying with the mouse
setw -g mode-mouse off

# Just click it
set -g mouse-select-pane off
set -g mouse-select-window off
set -g mouse-resize-pane off
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'


##------------
#  C O L O R
##------------
set -g default-terminal "screen-256color"

# Status bar
set -g status-fg white
set -g status-bg black

# Window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# Window list (active)
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# Pane border
set -g pane-border-fg cyan
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# Command line
set -g message-fg white
set -g message-bg black
set -g message-attr bright


##--------------
#  S T A T U S
##--------------
set -g status-utf8 on
set -g status-left-length 20
set -g status-left "#[fg=yellow]W:#I #[fg=cyan]P:#P #[fg=green]S:#S"
set -g status-right "#[fg=cyan]%d %b %R"


##--------------------------
#  N O T I F I C A T I O N
##--------------------------
setw -g monitor-activity on
set -g visual-activity on


##-----------------------
#  C U S T O M    E N V
##-----------------------
## I use tmuxinator
#
# To install:
#   gem install tmuxinator
# To setup new env:
#   tmuxinator open project_name
#   tmuxinator copy existing new_project_name
# To launch the env:
#   tmuxinator project_name
#   mux project_name

